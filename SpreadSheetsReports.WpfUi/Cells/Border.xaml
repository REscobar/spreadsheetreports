<UserControl xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"  x:Class="SpreadSheetsReports.WpfUi.Cells.Border"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:SpreadSheetsReports.WpfUi.Cells"
             xmlns:converters="clr-namespace:SpreadSheetsReports.WpfUi.Converters"
             xmlns:Document="clr-namespace:SpreadSheetsReports.DocumentModel;assembly=SpreadSheetsReports"
            xmlns:p="clr-namespace:SpreadSheetsReports.WpfUi.Properties"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="640"
             d:DataContext="{d:DesignInstance Type=local:CellBinder, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <converters:BorderTypeToThicknessConverter x:Key="BorderTypeToThicknessConverter"/>
        <converters:BorderTypeToAngleConverter x:Key="BorderTypeToAngleConverter"/>
        <!--<ObjectDataProvider x:Key="horizontalAligmentValues" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Document:HorizontalAlignment"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>-->
        <converters:BorderTypeToStrokeDashArrayConverter x:Key="BorderTypeToStrokeDashArrayConverter"/>
        <converters:BrushToColorConverter x:Key="BrushToColorConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <SolidColorBrush x:Key="LineBrush" Color="{Binding SelectedColor, Mode=OneWay, Source={x:Reference Name=colorPicker}}" />
        <converters:BorderTypeToVisibilityConverter x:Key="borderVisibilityConverter"/>
    </UserControl.Resources>
    <Grid Background="White">
        <GroupBox x:Name="groupBox" Header="{x:Static p:Resources.Border_Line}" Margin="10,10,0,17" HorizontalAlignment="Left" Width="185">
            <Grid Margin="10,10,10,-12">
                <Label x:Name="label" Content="{x:Static p:Resources.Border_LineStyle}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                <ListBox x:Name="listBox"  Margin="0,26,0,66" SelectedIndex="0" >
                    <ListBox.Resources>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Margin" Value="0,0,0,0"/>
                            <Setter Property="Width" Value="56" />
                            <Setter Property="Height" Value="26" />
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                        </Style>
                        <Style TargetType="{x:Type Line}">
                            <!--<Setter Property="Stroke" Value="{DynamicResource LineBrush}" />-->
                            <Setter Property="Stroke" Value="Black" />
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="RenderOptions.EdgeMode" Value="Aliased" />
                        </Style>
                    </ListBox.Resources>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Columns="2">
                            </UniformGrid>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.Items>
                        <Label Margin="0" Tag="{x:Static Document:BorderType.None}" >
                            <TextBlock Text="{x:Static p:Resources.Border_None}" />
                        </Label>
                        <Label Tag="{x:Static Document:BorderType.MediumDashDotDot}">
                            <Line X2="1" StrokeDashArray="5 2 2 2 2 2" Stretch="Fill" StrokeThickness="2" />
                        </Label>
                        <Label Tag="{x:Static Document:BorderType.Hair}">
                            <Line Stretch="Fill" X2="1" StrokeDashArray="1" />
                        </Label>
                        <Label Tag="{x:Static Document:BorderType.SlantedDashDot}">
                            <Line Stretch="Fill" X2="1" StrokeDashArray="3 1 1.5 1" StrokeThickness="2" RenderTransformOrigin="0.5,0.5" >
                                <Line.RenderTransform>
                                    <TransformGroup>
                                        <SkewTransform AngleX="-45"/>
                                    </TransformGroup>
                                </Line.RenderTransform>
                            </Line>
                        </Label>
                        <Label Tag="{x:Static Document:BorderType.Dotted}">
                            <Line Stretch="Fill" X2="1" StrokeDashArray="2" />
                        </Label>
                        <Label Tag="{x:Static Document:BorderType.MediumDashDot}">
                            <Line Stretch="Fill" X2="1" StrokeDashArray="5 2 2 2" StrokeThickness="2" />
                        </Label>
                        <Label Tag="{x:Static Document:BorderType.DashDotDot}">
                            <Line X2="1" StrokeDashArray="5 2 2 2 2 2" Stretch="Fill" />
                        </Label>
                        <Label Tag="{x:Static Document:BorderType.MediumDashed}">
                            <Line Stretch="Fill" X2="1" StrokeThickness="2" StrokeDashArray="5 2" />
                        </Label>
                        <Label Tag="{x:Static Document:BorderType.DashDot}">
                            <Line Stretch="Fill" X2="1" StrokeDashArray="5 2 2 2" />
                        </Label>
                        <Label Tag="{x:Static Document:BorderType.Medium}">
                            <Line Stretch="Fill" X2="1" StrokeThickness="2" StrokeDashArray="1 0" />
                        </Label>
                        <Label Tag="{x:Static Document:BorderType.Dashed}">
                            <Line Stretch="Fill" X2="1" StrokeDashArray="2 1" />
                        </Label>
                        <Label Tag="{x:Static Document:BorderType.Thick}">
                            <Line Stretch="Fill" X2="1" StrokeThickness="4" StrokeDashArray="1 0" />
                        </Label>
                        <Label Tag="{x:Static Document:BorderType.Thin}">
                            <Line Stretch="Fill" X2="1" StrokeDashArray="1 0" />
                        </Label>
                        <Label Tag="{x:Static Document:BorderType.Double}">
                            <StackPanel>
                                <Line Stretch="Fill" X2="1" StrokeDashArray="1 0" />
                                <Line Stretch="Fill" X2="1" StrokeDashArray="1 0" Opacity="0" />
                                <Line Stretch="Fill" X2="1" StrokeDashArray="1 0" />
                            </StackPanel>
                        </Label>
                    </ListBox.Items>
                </ListBox>
                <Label x:Name="label1" Content="{x:Static p:Resources.Border_LineColor}" HorizontalAlignment="Left" Margin="10,0,0,35" RenderTransformOrigin="-0.237,0.269" Height="26" VerticalAlignment="Bottom"/>
                <xctk:ColorPicker x:Name="colorPicker" Margin="10,0,10,13" Height="22" VerticalAlignment="Bottom" SelectedColor="Black" ColorMode="ColorCanvas" ShowAdvancedButton="False" ShowStandardColors="False" UsingAlphaChannel="False" />
            </Grid>
        </GroupBox>
        <GroupBox x:Name="groupBox1" Header="{x:Static p:Resources.Border_Border}" Margin="200,10,16,90">
            <Grid Margin="0">
                <Grid.Resources>
                    <Style TargetType="{x:Type Line}">
                        <Setter Property="Width" Value="26" />
                        <Setter Property="Height" Value="26" />
                        <Setter Property="StrokeEndLineCap" Value="Round" />
                        <Setter Property="StrokeStartLineCap" Value="Round" />
                    </Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Width" Value="26" />
                        <Setter Property="Height" Value="26" />
                        <Setter Property="Content" Value="X" />
                    </Style>
                </Grid.Resources>
                <Border BorderBrush="Black" BorderThickness="1" Margin="41,10,41,41">
                    <Grid>
                        <Label x:Name="label2" Content="{x:Static p:Resources.Border_Text}" HorizontalAlignment="Center" Width="31" Height="26" VerticalAlignment="Center" />
                        <Line Name="Right" DataContext="{Binding Path=Style.BorderStyleRight}" Stretch="Fill" X2="1" X1="0" Y1="0" Y2="10" Width="{Binding Type, Converter={StaticResource BorderTypeToThicknessConverter}}" Height="Auto" Margin="0,10,10,10" HorizontalAlignment="Right" Tag="{Binding DataContext, RelativeSource={RelativeSource Self}}"  Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=button_R, Mode=TwoWay}" Stroke="{Binding Path=Color, Converter={StaticResource BrushToColorConverter}}" StrokeDashArray="{Binding Path=Type, Converter={StaticResource BorderTypeToStrokeDashArrayConverter}}" SnapsToDevicePixels="True" RenderOptions.EdgeMode="Aliased" StrokeThickness="{Binding Type, Converter={StaticResource BorderTypeToThicknessConverter}}">
                            <Line.RenderTransform>
                                <TransformGroup>
                                    <SkewTransform AngleY="{Binding Type, Converter={StaticResource BorderTypeToAngleConverter}, Mode=OneWay}"/>
                                </TransformGroup>
                            </Line.RenderTransform>
                        </Line>
                        <Line Name="Left" DataContext="{Binding Path=Style.BorderStyleLeft}" Stretch="Fill" X2="1" X1="0" Y1="0" Y2="10" HorizontalAlignment="Left" Width="{Binding Type, Converter={StaticResource BorderTypeToThicknessConverter}}" Height="Auto" Margin="10,10,0,10" Tag="{Binding DataContext, RelativeSource={RelativeSource Self}}"  Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=button_L, Mode=TwoWay}" Stroke="{Binding Path=Color, Converter={StaticResource BrushToColorConverter}}" StrokeDashArray="{Binding Path=Type, Converter={StaticResource BorderTypeToStrokeDashArrayConverter}}" SnapsToDevicePixels="True" RenderOptions.EdgeMode="Aliased" StrokeThickness="{Binding Type, Converter={StaticResource BorderTypeToThicknessConverter}}">
                            <Line.RenderTransform>
                                <TransformGroup>
                                    <SkewTransform AngleY="{Binding Type, Converter={StaticResource BorderTypeToAngleConverter}, Mode=OneWay}"/>
                                </TransformGroup>
                            </Line.RenderTransform>
                        </Line>
                        <Line Name="Top" DataContext="{Binding Path=Style.BorderStyleTop}" Stretch="Fill" X2="1" X1="0" Y1="0" Y2="10" Width="Auto" Height="{Binding Type, Converter={StaticResource BorderTypeToThicknessConverter}}" VerticalAlignment="Top" Margin="10,10,10,0" Tag="{Binding DataContext, RelativeSource={RelativeSource Self}}"  Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=button_T, Mode=TwoWay}" Stroke="{Binding Path=Color, Converter={StaticResource BrushToColorConverter}}" StrokeDashArray="{Binding Path=Type, Converter={StaticResource BorderTypeToStrokeDashArrayConverter}}" SnapsToDevicePixels="True" RenderOptions.EdgeMode="Aliased" StrokeThickness="{Binding Type, Converter={StaticResource BorderTypeToThicknessConverter}}">
                            <Line.RenderTransform>
                                <TransformGroup>
                                    <SkewTransform AngleX="{Binding Type, Converter={StaticResource BorderTypeToAngleConverter}, Mode=OneWay}"/>
                                </TransformGroup>
                            </Line.RenderTransform>
                        </Line>
                        <Line Name="Bottom" DataContext="{Binding Path=Style.BorderStyleBottom}" Stretch="Fill" X2="1" X1="0" Y1="0" Y2="10" Width="Auto" Height="{Binding Type, Converter={StaticResource BorderTypeToThicknessConverter}}" Margin="10,0,10,10" VerticalAlignment="Bottom" Tag="{Binding DataContext, RelativeSource={RelativeSource Self}}"  Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=button_B, Mode=TwoWay}" Stroke="{Binding Path=Color, Converter={StaticResource BrushToColorConverter}}" StrokeDashArray="{Binding Path=Type, Converter={StaticResource BorderTypeToStrokeDashArrayConverter}}" SnapsToDevicePixels="True" RenderOptions.EdgeMode="Aliased" StrokeThickness="{Binding Type, Converter={StaticResource BorderTypeToThicknessConverter}}">
                            <Line.RenderTransform>
                                <TransformGroup>
                                    <SkewTransform AngleX="{Binding Type, Converter={StaticResource BorderTypeToAngleConverter}, Mode=OneWay}"/>
                                </TransformGroup>
                            </Line.RenderTransform>
                        </Line>
                        <Line Name="LR" DataContext="{Binding Path=Style.BorderStyleDiagonalUpLeftToBottomRight}" Stretch="Fill" X2="1" X1="0" Y1="0" Y2="10" Width="Auto" Height="Auto" Margin="10" Tag="{Binding DataContext, RelativeSource={RelativeSource Self}}" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=button_LR, Mode=TwoWay}" Stroke="{Binding Path=Color, Converter={StaticResource BrushToColorConverter}}" StrokeDashArray="{Binding Path=Type, Converter={StaticResource BorderTypeToStrokeDashArrayConverter}}" SnapsToDevicePixels="True" RenderOptions.EdgeMode="Aliased" StrokeThickness="{Binding Type, Converter={StaticResource BorderTypeToThicknessConverter}}"/>
                        <Line Name="RL" DataContext="{Binding Path=Style.BorderStyleDiagonalUpRightToBottomLeft}" Stretch="Fill" X2="0" X1="1" Y1="0" Y2="10" Width="Auto" Height="Auto" Margin="10"  Tag="{Binding DataContext, RelativeSource={RelativeSource Self}}"  Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=button_RL, Mode=TwoWay}" Stroke="{Binding Path=Color, Converter={StaticResource BrushToColorConverter}}" StrokeDashArray="{Binding Path=Type, Converter={StaticResource BorderTypeToStrokeDashArrayConverter}}" SnapsToDevicePixels="True" RenderOptions.EdgeMode="Aliased" StrokeThickness="{Binding Type, Converter={StaticResource BorderTypeToThicknessConverter}}"/>

                        <Line Name="RightCl" Stretch="Fill" Stroke="Black" X2="1" X1="0" Y1="0" Y2="1" HorizontalAlignment="Right" Width="15" Height="Auto" Margin="0,10,10,10" StrokeThickness="15" StrokeStartLineCap="Square" StrokeEndLineCap="Square" Tag="{Binding ElementName=Right, Mode=OneWay}" MouseDown="Border_MouseDown" Opacity="0" />
                        <Line Name="LeftCl" Stretch="Fill" Stroke="Black" X2="1" X1="0" Y1="0" Y2="1" HorizontalAlignment="Left" Width="15" Height="Auto" Margin="10,10,0,10" StrokeThickness="15" StrokeStartLineCap="Square" StrokeEndLineCap="Square" Tag="{Binding ElementName=Left, Mode=OneWay}" MouseDown="Border_MouseDown" Opacity="0"/>
                        <Line Name="TopCl" Stretch="Fill" Stroke="Black" X2="1" X1="0" Y1="0" Y2="1" Width="Auto" Height="15" Margin="10,10,10,0" StrokeThickness="15" StrokeStartLineCap="Square" StrokeEndLineCap="Square" Tag="{Binding ElementName=Top, Mode=OneWay}" MouseDown="Border_MouseDown" Opacity="0" VerticalAlignment="Top"/>
                        <Line Name="BottomCl" Stretch="Fill" Stroke="Black" X2="1" X1="0" Y1="0" Y2="1" Width="Auto" Height="15" Margin="10,0,10,10" StrokeThickness="15" StrokeStartLineCap="Square" StrokeEndLineCap="Square" Tag="{Binding ElementName=Bottom, Mode=OneWay}" MouseDown="Border_MouseDown" Opacity="0" VerticalAlignment="Bottom"/>
                        <Line Name="LRCl" Stretch="Fill" Stroke="Black" X2="1" X1="0" Y1="0" Y2="10" Width="Auto" Height="Auto" Margin="10" StrokeThickness="15" StrokeStartLineCap="Square" StrokeEndLineCap="Square"  Tag="{Binding ElementName=LR, Mode=OneWay}" MouseDown="Border_MouseDown" Opacity="0"/>
                        <Line Name="RLCl" Stretch="Fill" Stroke="Black" Width="Auto" Height="Auto" Margin="10" StrokeThickness="15" StrokeStartLineCap="Square" StrokeEndLineCap="Square" Y2="1" X1="1"  Tag="{Binding ElementName=RL, Mode=OneWay}" MouseDown="Border_MouseDown" Opacity="0"/>

                        <Line  Stretch="Fill" Stroke="Gray" X2="1" X1="0" Y1="0" Y2="10" HorizontalAlignment="Left" Width="1" Height="8" VerticalAlignment="Top" Margin="10,2,0,0" StrokeEndLineCap="Square" StrokeStartLineCap="Square" />
                        <Line  Stretch="Fill" Stroke="Gray" X2="1" X1="0" Y1="0" Y2="10" HorizontalAlignment="Left" Width="8" Height="1" VerticalAlignment="Top" Margin="2,10,0,0" StrokeEndLineCap="Square" StrokeStartLineCap="Square" />
                        <Line  Stretch="Fill" Stroke="Gray" X2="1" X1="0" Y1="0" Y2="10" HorizontalAlignment="Left" Width="8" Height="1" Margin="2,0,0,10" StrokeEndLineCap="Square" StrokeStartLineCap="Square" VerticalAlignment="Bottom" />
                        <Line  Stretch="Fill" Stroke="Gray" X2="1" X1="0" Y1="0" Y2="10" Width="8" Height="1" Margin="0,0,2,10" StrokeEndLineCap="Square" StrokeStartLineCap="Square" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                        <Line  Stretch="Fill" Stroke="Gray" X2="1" X1="0" Y1="0" Y2="10" Width="8" Height="1" VerticalAlignment="Top" Margin="0,10,2,0" StrokeEndLineCap="Square" StrokeStartLineCap="Square" HorizontalAlignment="Right" />
                        <Line  Stretch="Fill" Stroke="Gray" X2="1" X1="0" Y1="0" Y2="10" HorizontalAlignment="Left" Width="1" Height="8" Margin="10,0,0,2" StrokeEndLineCap="Square" StrokeStartLineCap="Square" VerticalAlignment="Bottom" />
                        <Line  Stretch="Fill" Stroke="Gray" X2="1" X1="0" Y1="0" Y2="10" Width="1" Height="8" Margin="0,0,10,2" StrokeEndLineCap="Square" StrokeStartLineCap="Square" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                        <Line  Stretch="Fill" Stroke="Gray" X2="1" X1="0" Y1="0" Y2="10" Width="1" Height="8" VerticalAlignment="Top" Margin="0,2,10,0" StrokeEndLineCap="Square" StrokeStartLineCap="Square" HorizontalAlignment="Right" />

                    </Grid>
                </Border>
                <ToggleButton x:Name="button_T" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Tag="{Binding ElementName=Top, Mode=OneWay}" Click="BorderVisibilityClick" IsChecked="{Binding Style.BorderStyleTop.Type, Converter={StaticResource borderVisibilityConverter}, Mode=OneWay}"/>
                <ToggleButton x:Name="button_B" HorizontalAlignment="Left" Margin="10,0,0,41" Height="26" VerticalAlignment="Bottom" Tag="{Binding ElementName=Bottom, Mode=OneWay}" IsChecked="{Binding Style.BorderStyleBottom.Type, Converter={StaticResource borderVisibilityConverter}, Mode=OneWay}" Click="BorderVisibilityClick"/>
                <ToggleButton x:Name="button_RL" HorizontalAlignment="Left" Margin="10,0,0,10" RenderTransformOrigin="0.487,1.269" Height="26" VerticalAlignment="Bottom" Tag="{Binding ElementName=RL, Mode=OneWay}" IsChecked="{Binding Style.BorderStyleDiagonalUpRightToBottomLeft.Type, Converter={StaticResource borderVisibilityConverter}, Mode=OneWay}" Click="BorderVisibilityClick"/>
                <ToggleButton x:Name="button_L" HorizontalAlignment="Left" Margin="41,0,0,10" RenderTransformOrigin="0.487,1.269" Height="26" VerticalAlignment="Bottom" Tag="{Binding ElementName=Left, Mode=OneWay}" IsChecked="{Binding Style.BorderStyleLeft.Type, Converter={StaticResource borderVisibilityConverter}, Mode=OneWay}" Click="BorderVisibilityClick"/>
                <ToggleButton x:Name="button_R" Margin="0,0,41,10" RenderTransformOrigin="0.487,1.269" Width="26" HorizontalAlignment="Right" Height="26" VerticalAlignment="Bottom" Tag="{Binding ElementName=Right, Mode=OneWay}" IsChecked="{Binding Style.BorderStyleRight.Type, Converter={StaticResource borderVisibilityConverter}, Mode=OneWay}" Click="BorderVisibilityClick"/>
                <ToggleButton x:Name="button_LR" Margin="0,0,10,10" RenderTransformOrigin="0.487,1.269" Width="26" HorizontalAlignment="Right" Height="26" VerticalAlignment="Bottom" Tag="{Binding ElementName=LR, Mode=OneWay}" IsChecked="{Binding Style.BorderStyleDiagonalUpLeftToBottomRight.Type, Converter={StaticResource borderVisibilityConverter}, Mode=OneWay}" Click="BorderVisibilityClick"/>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
